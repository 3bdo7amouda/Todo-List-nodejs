---
- name: Configure EC2 instances for Todo App
  hosts: todo_servers
  become: yes
  gather_facts: yes
  
  tasks:
    - name: Update system packages
      apt:
        update_cache: yes
        upgrade: dist
        cache_valid_time: 3600

    - name: Install required system packages
      apt:
        name:
          - curl
          - wget
          - git
          - software-properties-common
          - apt-transport-https
          - ca-certificates
          - gnupg
          - lsb-release
          - ufw
        state: present

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present

    - name: Install Docker
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Start and enable Docker service
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Add ubuntu user to docker group
      user:
        name: ubuntu
        groups: docker
        append: yes

    - name: Install Docker Compose standalone (for compatibility)
      get_url:
        url: "https://github.com/docker/compose/releases/latest/download/docker-compose-linux-x86_64"
        dest: /usr/local/bin/docker-compose
        mode: '0755'

    - name: Create application directory
      file:
        path: /opt/todo-app
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: '0755'

    - name: Configure UFW firewall
      ufw:
        state: enabled
        policy: deny
        direction: incoming

    - name: Open firewall ports
      ufw:
        rule: allow
        port: "{{ item }}"
      loop:
        - '22'
        - '80'
        - '443'
        - '4000'

    - name: Test Docker installation
      command: docker --version
      register: docker_version
      become_user: ubuntu

    - name: Display Docker version
      debug:
        msg: "✅ Docker installed: {{ docker_version.stdout }}"

    - name: Test Docker Compose installation
      command: docker-compose --version
      register: compose_version
      become_user: ubuntu

    - name: Display Docker Compose version
      debug:
        msg: "✅ Docker Compose installed: {{ compose_version.stdout }}"

    - name: Verify Docker service is running
      command: docker info
      register: docker_info
      become_user: ubuntu

    - name: Display setup completion
      debug:
        msg: "✅ Server {{ inventory_hostname }} ({{ ansible_host }}) is ready for deployment!"