---
- name: Deploy Todo App with Docker Compose
  hosts: todo_servers
  become: yes
  gather_facts: no
  
  vars:
    app_dir: /opt/todo-app
  
  tasks:
    - name: Create application directory
      file:
        path: "{{ app_dir }}"
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: '0755'

    - name: Copy application files to servers
      copy:
        src: "{{ item.src }}"
        dest: "{{ app_dir }}/{{ item.dest }}"
        owner: ubuntu
        group: ubuntu
        mode: '0644'
      loop:
        - { src: "../../docker-compose.yml", dest: "docker-compose.yml" }
        - { src: "../../Dockerfile", dest: "Dockerfile" }
        - { src: "../../package.json", dest: "package.json" }
        - { src: "../../index.js", dest: "index.js" }

    - name: Copy .env file to servers
      copy:
        src: "../../.env"
        dest: "{{ app_dir }}/.env"
        owner: ubuntu
        group: ubuntu
        mode: '0600'

    - name: Copy application directories
      copy:
        src: "{{ item }}"
        dest: "{{ app_dir }}"
        owner: ubuntu
        group: ubuntu
        mode: preserve
      loop:
        - "../../config"
        - "../../controllers" 
        - "../../models"
        - "../../routes"
        - "../../views"
        - "../../assets"

    - name: Stop existing containers (if any)
      command: docker-compose down
      args:
        chdir: "{{ app_dir }}"
      become_user: ubuntu
      ignore_errors: yes

    - name: Build and start containers
      command: docker-compose up -d --build
      args:
        chdir: "{{ app_dir }}"
      become_user: ubuntu

    - name: Wait for application to start
      wait_for:
        port: 4000
        host: "{{ ansible_host }}"
        delay: 15
        timeout: 180
      delegate_to: localhost

    - name: Display deployment status
      debug:
        msg: "âœ… Todo app deployed on {{ ansible_host }}:4000"